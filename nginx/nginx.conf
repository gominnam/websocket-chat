events {}

http {
    upstream websocket-app {
        server websocket-chat:8080;
    }

    # HTTP를 HTTPS로 리다이렉트
    server {
        listen 80;
        server_name boosterko.kr www.boosterko.kr;

        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name boosterko.kr www.boosterko.kr;

        ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;

        location / {
            proxy_pass http://websocket-app; # nginx가 받은 요청을 websocket-app으로 전달
            proxy_http_version 1.1; # websocket 연결은 http 1.1 프로토콜을 사용
            proxy_set_header Upgrade $http_upgrade; # 클라이언트와 서버 간에 프로토콜 전환을 요청하는 데 사용
            proxy_set_header Connection "upgrade"; # Connection 헤더는 현재의 트랜스포트 연결 유지, "upgrade"는 프로토콜 전환할 것을 서버에 요청.
            proxy_set_header Host $host; # websocket-app으로 전달할 때 host 헤더를 설정
            proxy_set_header X-Real-IP $remote_addr; # X-Real-IP 헤더는 클라이언트의 실제 IP 주소를 서버에 전달하기 위해 사용
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 변수는 기존의 X-Forwarded-For 헤더 값을 포함하며, 현재 클라이언트의 IP 주소를 이어 붙입니다.
            proxy_set_header X-Forwarded-Proto $scheme; # X-Forwarded-Proto 헤더는 클라이언트가 사용한 프로토콜을 서버에 전달하기 위해 사용 (ex. http, https)
        }
    }
}
