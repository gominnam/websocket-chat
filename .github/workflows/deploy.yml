name: Deploy to AWS EC2

on:
  push:
    branches:
      - flyway_db

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build Spring Boot application
        run: |
          ./gradlew clean build -x test
          ls -l build/libs/
          pwd

      # Jar 파일을 EC2 인스턴스로 복사
      - name: Copy JAR to EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_USER_NAME }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          source: "/github/workspace/build/libs/websocket-chat.jar"
          target: "/home/ec2-user/web/server"

      - name: SSH into EC2 and restart application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_USER_NAME }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_EC2_PORT }}
          script: |
            cd /home/ec2-user/web/server/github/workspace/build/libs
            export SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}
            export JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            export GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            
            # 기존에 실행중인 프로세스 ID 찾기
            PID=$(ps -ef | grep websocket-chat.jar | grep -v grep | awk '{print $2}')
            # PID가 존재하면 해당 프로세스 종료
            if [ ! -z "$PID" ]; then
              echo "Stopping existing application with PID $PID"
              kill $PID
              sleep 5
            fi
            
            # 새로운 jar 파일 실행
            pwd
            nohup java -jar /home/ec2-user/web/server/github/workspace/build/libs/websocket-chat.jar --spring.profiles.active=prod &
            disown
