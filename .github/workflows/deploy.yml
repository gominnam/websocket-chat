name: Deploy to AWS EC2

on:
  push:
    branches:
      - flyway_db

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_EC2_HOST_IP: ${{ secrets.AWS_EC2_HOST_IP }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Print current directory
        run: |
          pwd    

      - name: Build Spring Boot application
        run: |
          ./gradlew clean build -x test
          ls -l build/libs/
          pwd

      # Jar 파일을 EC2 인스턴스로 복사
      - name: Copy JAR to EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_USER_NAME }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          source: "/github/workspace/build/libs/websocket-chat.jar"
          target: "/home/ec2-user/web/server"

      # MySQL 실행 및 사용자 로그인
      - name: MySQL login
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_USER_NAME }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_EC2_PORT }}
          script: |
            sudo systemctl stop mysqld
            sudo systemctl start mysqld
            sudo systemctl status mysqld
            mysql -u${{ secrets.DB_USERNAME }} -p${{ secrets.DB_PASSWORD }}

      - name: SSH into EC2 and restart application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_USER_NAME }}
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          port: ${{ secrets.AWS_EC2_PORT }}
          script: |
            if [ ! -f .env ]; then
              echo "AWS_EC2_HOST_IP=${AWS_EC2_HOST_IP}" >> .env
              echo "DB_USERNAME=${DB_USERNAME}" >> .env
              echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
              echo "SECRET_KEY=${SECRET_KEY}" >> .env
            fi
            
            cd /home/ec2-user/web/server/github/workspace/build/libs
            java -jar /home/ec2-user/web/server/github/workspace/build/libs/websocket-chat.jar --spring.profiles.active=prod

